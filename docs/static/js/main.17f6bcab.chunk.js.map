{"version":3,"sources":["App.js","utils.js","index.js"],"names":["InputField","label","inputProps","className","min","DropdownField","opts","selected","dropdownProps","map","opt","value","CONTAIN_OPTIONS","AcampGallery","CONTAIN","CONTAIN_ACTIVE_IMAGE","CONTAIN_OFF","App","useState","images","setImages","sideColumns","setSideColumns","columnGutter","setColumnGutter","columnWidth","setColumnWidth","height","setHeight","containImage","setContainImage","activeOnHover","setActiveOnHover","navigation","setNavigation","href","target","rel","Array","from","_","index","id","process","getImage","type","onChange","event","parseInt","max","step","selectedIndex","checked","showWhenOneImageOrLess","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17f6bcab.chunk.js","sourcesContent":["import './App.css';\nimport AcampGallery from '@judsirera/acamp-gallery';\nimport { useState } from 'react';\nimport { getImage } from './utils';\n\nconst InputField = ({ label, ...inputProps }) => {\n  return (\n    <div className='input-field'>\n      <label className='input-field-label'>{label}</label>\n      <input min={0} {...inputProps} />\n    </div>\n  );\n};\n\nconst DropdownField = ({ label, opts, selected, ...dropdownProps }) => {\n  return (\n    <div className='input-field'>\n      <label className='input-field-label'>{label}</label>\n      <select {...dropdownProps}>\n        {opts.map((opt) => (\n          <option value={opt} selected={selected === opt}>\n            {opt}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nconst CONTAIN_OPTIONS = [\n  AcampGallery.CONTAIN,\n  AcampGallery.CONTAIN_ACTIVE_IMAGE,\n  AcampGallery.CONTAIN_OFF\n];\n\nconst App = () => {\n  const [images, setImages] = useState(5);\n  const [sideColumns, setSideColumns] = useState(2);\n  const [columnGutter, setColumnGutter] = useState(20);\n  const [columnWidth, setColumnWidth] = useState(75);\n  const [height, setHeight] = useState(460);\n  const [containImage, setContainImage] = useState(AcampGallery.CONTAIN_OFF);\n  const [activeOnHover, setActiveOnHover] = useState(false);\n  const [navigation, setNavigation] = useState(true);\n\n  return (\n    <div className='app'>\n      <h1>Acamp's Gallery</h1>\n      <h3>Our gallery available for your pages!</h3>\n      <div className='credits'>\n        <p>\n          Designed by{' '}\n          <a href='https://marija.lynxdev.io/' target='_blank' rel='noreferrer'>\n            Marija Vitasovic\n          </a>\n        </p>\n        <p>\n          Implemented by{' '}\n          <a href='http://judithsirera.com/' target='_blank' rel='noreferrer'>\n            Judith Sirera\n          </a>\n        </p>\n        <p>\n          With Love, from{' '}\n          <a href='https://acamp.com/' target='_blank' rel='noreferrer'>\n            Acamp\n          </a>\n        </p>\n      </div>\n      <AcampGallery\n        images={Array.from(Array(images), (_, index) => getImage(index))}\n        height={height}\n        columnGutter={columnGutter}\n        columnWidth={columnWidth}\n        sideColumns={sideColumns}\n        containImage={containImage}\n        activeOnHover={activeOnHover}\n        navigation={navigation}\n        className='gallery-slider'\n      />\n      <div className='input-container'>\n        <h3>Customize your gallery</h3>\n        <InputField\n          label='Number of images'\n          type='number'\n          value={images}\n          min={1}\n          onChange={(event) => setImages(parseInt(event.target.value))}\n        />\n        <InputField\n          label='Side Columns'\n          type='number'\n          value={sideColumns}\n          max={5}\n          onChange={(event) => setSideColumns(parseInt(event.target.value))}\n        />\n        <InputField\n          label='Column Gutter'\n          type='number'\n          step={5}\n          value={columnGutter}\n          onChange={(event) => setColumnGutter(parseInt(event.target.value))}\n        />\n        <InputField\n          label='Column Width'\n          type='number'\n          value={columnWidth}\n          step={5}\n          onChange={(event) => setColumnWidth(parseInt(event.target.value))}\n        />\n        <InputField\n          label='Height'\n          type='number'\n          value={height}\n          step={20}\n          onChange={(event) => setHeight(parseInt(event.target.value))}\n        />\n        <DropdownField\n          label='Contain Image'\n          opts={CONTAIN_OPTIONS}\n          selected={containImage}\n          onChange={(event) => {\n            setContainImage(CONTAIN_OPTIONS[event.target.selectedIndex]);\n          }}\n        />\n        <InputField\n          label='Active on hover'\n          type='checkbox'\n          checked={activeOnHover}\n          onChange={() => setActiveOnHover(!activeOnHover)}\n        />\n        <InputField\n          label='Navigation'\n          type='checkbox'\n          checked={navigation}\n          onChange={() => setNavigation(!navigation)}\n        />\n        {navigation && (\n          <>\n            <h4>Navigation parameters</h4>\n            <InputField\n              label='Show navigation when one image or less'\n              type='checkbox'\n              checked={navigation?.showWhenOneImageOrLess}\n              onChange={() =>\n                setNavigation({ showWhenOneImageOrLess: !navigation?.showWhenOneImageOrLess })\n              }\n            />\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","export const TOTAL_IMAGES = 13;\n\nexport const getImage = (index) => {\n  const id = index % TOTAL_IMAGES;\n  return `${process.env.PUBLIC_URL}/images/image${id}.jpg`;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}